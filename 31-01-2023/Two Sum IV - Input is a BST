// Two Sum IV - Input is a BST

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean findTarget(TreeNode root, int k) {
        HashSet<Integer> set = new HashSet<>();
        return bfs(root,set,k);
    }
    boolean bfs(TreeNode curr,HashSet<Integer> set,int k){
        if(curr==null){
            return false;
        }
        if(set.contains(k-curr.val)){
            return true;
        }
        set.add(curr.val);
        boolean left = bfs(curr.left,set,k);
        boolean right = bfs(curr.right,set,k);
        return left || right;
    }
}
